#!/usr/bin/env bash

# TODO:
# - stream audio over the network
#   - [-ao streaming driver?](http://www.linuxquestions.org/questions/linux-software-2/redirecting-mplayer-output-241666/)
#   - http://dzello.com/blog/2012/11/21/live-stream-audio-from-osx-mountain-lion-with-icecast-and-darkice/
#     - setup
#       - `brew install jack darkice icecast`:
#       - [soundflower](https://rogueamoeba.com/freebies/soundflower/)
#     - process
#       - jackd -d coreaudio

list=$1

shift 1

options=$@

if [[ -z $list ]]; then
	list=fav
fi

shuffle=-shuffle
video_options=-novideo
audio_filters=

for option in $options; do
	case $option in
		-no-shuffle ) shuffle=;;
		-enable-video ) video_options=;;
		-eq-normal ) audio_filters="$audio_filters equalizer=0:0:0:0:0:0:0:0:0:0";;
		-eq-boom ) audio_filters="$audio_filters equalizer=2:8:0:0:0:0:0:0:0:0";;
		-broadcast ) broadcast=y;;
		* ) echo "unknown option '$option'. passing directly to mplayer"; otheroptions="$otheroptions $option";;
	esac
done

if [[ $broadcast = y ]]; then

	if [[ Darwin = $(uname) ]]; then
		audio_driver=coreaudio
		device_id=206
	else
		audio_driver="help"
	fi

	audio_options="$audio_options -ao $audio_driver"

	if [[ -n $device_id ]]; then
		audio_options="$audio_options:device_id=$device_id"
	fi

	echo "starting jackd"
	jackd -d coreaudio &> /dev/null &

	echo "starting icecast"
	icecast -c $(dirname $0)/.service/icecast.default.xml

	echo "starting darkice"
	darkice -c $(dirname $0)/.service/darkice.cfg

fi

if [[ -n $audio_filters ]]; then
	audio_options="$audio_options -af $audio_filters"
fi

list=${list/.m3u/}

listpath=$(dirname $0)/playlists/$list.m3u

if [[ ! -f $listpath ]]; then
	echo "$listpath doesn't exist"
	exit 1
fi

mplayer $video_options $audio_options $shuffle -loop 0 -playlist $listpath $otheroptions
